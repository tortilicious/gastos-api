# ===============================================================
# == CONFIGURACIÓN UNIVERSAL (Funciona en Local y Producción) ==
# ===============================================================

# --- Nombre de la Aplicación ---
spring.application.name=gastos-api

# --- Puerto del Servidor ---
# En Railway, usará el puerto que le asigne la variable PORT.
# En local, si no hay variable PORT, usará el 8080 por defecto.
server.port=${PORT:8080}

# --- Configuración de la Base de Datos ---
# Esta es la forma más robusta. Construimos la URL a partir de las
# variables individuales que proporciona Railway.
# Para local, asegúrate de tener estas variables (DB_HOST, etc.) o cambia los valores por defecto.
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:gastos_dev}?sslmode=${DB_SSLMODE:prefer}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:tu_contraseña_local}

# --- Configuración de JPA / Hibernate ---
# En producción, puedes crear una variable de entorno DDL_AUTO=validate para más seguridad.
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# En local, puedes poner SHOW_SQL=true para ver las consultas.
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SHOW_SQL:false}

# --- Configuración de JWT ---
# En producción, DEBES crear una variable de entorno JWT_SECRET.
jwt.secret=${JWT_SECRET:ClaveSecretaParaDesarrolloQueEsMuyLargaYSegura}
jwt.expiration-in-ms=86400000

# --- Documentación Swagger ---
springdoc.swagger-ui.path=/api-docs.html

# --- Logging ---
logging.level.org.springframework=INFO
logging.level.org.mlc.gastosapi=INFO

